#!/bin/bash

declare -a TARGET_LIST=("qemux86-64" "qemuarm64" "raspberrypi3-64" "k3r5" "turbo-arm64")

function usage {
    echo "sample first build:" 
    echo "   source setup-environment build.pi raspberrypi"
    echo ""
    echo "sample CONSECUTIVE build" 
    echo "   source setup-environment build.pi"
    return 0
} 

function printtargets {
    echo "supported targets:"

    for TARGET in "${TARGET_LIST[@]}"
    do
        echo "   ${TARGET}"
    done

    echo ""
    return 0
} 

function CheckTarget
{
    TARGET_REQ=$1
    for TARGET_ELEMENT in "${TARGET_LIST[@]}"
    do
        if [ "${TARGET_REQ}" = "${TARGET_ELEMENT}" ]; then
            echo "target <${TARGET_REQ}>  found"
            return 0
        fi
    done

    echo "target <${TARGET_REQ}>  not found"
    return 1
}

function addlayers {
    # add relevant layers
    bitbake-layers add-layer "$PWD"/../sources/meta-openembedded/meta-oe/
    bitbake-layers add-layer "$PWD"/../sources/meta-openembedded/meta-python/
    bitbake-layers add-layer "$PWD"/../sources/meta-openembedded/meta-multimedia/
    bitbake-layers add-layer "$PWD"/../sources/meta-openembedded/meta-networking/
    bitbake-layers add-layer "$PWD"/../sources/meta-turbo/
    bitbake-layers add-layer "$PWD"/../sources/meta-templates/
    bitbake-layers add-layer "$PWD"/../sources/meta-arm/
    return 0
} 

# Inspired by "probe" in oe-init-build-env
if [ -n "$BASH_SOURCE" ]; then
    this_script=$BASH_SOURCE
elif [ -n "$ZSH_NAME" ]; then
    this_script=$0
else
    this_script="$(pwd)/setup-environment"
fi

script_dir=$(dirname "$this_script")
script_dir=$(readlink -f "$script_dir")

layers_dir=sources

# check if argument is missing
if [[ $# -eq 1 || $# -eq 2 ]]; then 
    build_dir=${script_dir}/$1
    echo "Builddir =" "$build_dir"  
else
    echo "error: number of arguments is not valid"
    echo ""
    usage
fi

# check if target exists and return when not exists
if [[ $# -eq 2 ]]; then 
    TARGET=$2
    CheckTarget "${TARGET}"

    if [[ $? -eq 0 ]]; then
        echo "Target ${TARGET} found!"
    else
        printtargets "$TARGET"
        return
    fi
fi

# call the yocto oe-init-build-env script
if [[ $# -eq 1 || $# -eq 2 ]]; then 
    build_dir=${script_dir}/$1
    echo "Builddir =" "$build_dir"

    if [ -f "${script_dir}/${layers_dir}/poky/oe-init-build-env" ]; then
        source ${script_dir}/${layers_dir}/poky/oe-init-build-env ${build_dir}
    else
        echo "Sorry, can't find oe-init-build-env."
        return
    fi
fi


if [[ $# -eq 2 ]]; then 
    TARGET=$2

    # copy local conf and set machine
    cp ../sources/meta-turbo/templates/local.conf conf/local.conf
    sed -i "s/MACHINE ??= \"none\"/MACHINE ??= \"${TARGET}\"/g" conf/local.conf 

    # add layers
    addlayers

    # copy template of local.conf 
    if [ "${TARGET}" == "raspberrypi3-64" ]; then
        bitbake-layers add-layer "${PWD}/../sources/meta-raspberrypi/"
    fi

fi

echo "script is ready"